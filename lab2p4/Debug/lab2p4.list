
lab2p4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b8  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init         00000004  080001b8  080001b8  000101b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         00000004  080001bc  080001bc  000101bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         00000000  20000000  20000000  000101c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  20000000  20000000  00000000  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000101c0  2**0
                  CONTENTS, READONLY
  6 .debug_line   000000f2  00000000  00000000  000101e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line_str 0000002c  00000000  00000000  000102da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_info   00000025  00000000  00000000  00010306  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_abbrev 00000014  00000000  00000000  0001032b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_aranges 00000020  00000000  00000000  00010340  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000038  00000000  00000000  00010360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000000 <vector_table>:
 8000000:	20002000 	.word	0x20002000
 8000004:	08000021 	.word	0x08000021
 8000008:	08000057 	.word	0x08000057
 800000c:	08000057 	.word	0x08000057
 8000010:	20000000 	.word	0x20000000
 8000014:	20000000 	.word	0x20000000
 8000018:	20000000 	.word	0x20000000
 800001c:	20000000 	.word	0x20000000

08000020 <Reset_Handler>:

/* reset handler */
.section .text
Reset_Handler:
	/* set stack pointer */
	ldr r0, =_estack
 8000020:	484c      	ldr	r0, [pc, #304]	; (8000154 <delay+0xa>)
	mov sp, r0
 8000022:	4685      	mov	sp, r0

	/* initialize data and bss
	 * not necessary for rom only code
	 * */
	bl init_data
 8000024:	f000 f803 	bl	800002e <init_data>
	/* call main */
	bl main
 8000028:	f000 f816 	bl	8000058 <main>
	/* trap if returned */
	b .
 800002c:	e7fe      	b.n	800002c <Reset_Handler+0xc>

0800002e <init_data>:
/* initialize data and bss sections */
.section .text
init_data:

	/* copy rom to ram */
	ldr r0, =_sdata
 800002e:	484a      	ldr	r0, [pc, #296]	; (8000158 <delay+0xe>)
	ldr r1, =_edata
 8000030:	494a      	ldr	r1, [pc, #296]	; (800015c <delay+0x12>)
	ldr r2, =_sidata
 8000032:	4a4b      	ldr	r2, [pc, #300]	; (8000160 <delay+0x16>)
	movs r3, #0
 8000034:	2300      	movs	r3, #0
	b LoopCopyDataInit
 8000036:	e002      	b.n	800003e <LoopCopyDataInit>

08000038 <CopyDataInit>:

	CopyDataInit:
		ldr r4, [r2, r3]
 8000038:	58d4      	ldr	r4, [r2, r3]
		str r4, [r0, r3]
 800003a:	50c4      	str	r4, [r0, r3]
		adds r3, r3, #4
 800003c:	3304      	adds	r3, #4

0800003e <LoopCopyDataInit>:

	LoopCopyDataInit:
		adds r4, r0, r3
 800003e:	18c4      	adds	r4, r0, r3
		cmp r4, r1
 8000040:	428c      	cmp	r4, r1
		bcc CopyDataInit
 8000042:	d3f9      	bcc.n	8000038 <CopyDataInit>

	/* zero bss */
	ldr r2, =_sbss
 8000044:	4a47      	ldr	r2, [pc, #284]	; (8000164 <delay+0x1a>)
	ldr r4, =_ebss
 8000046:	4c48      	ldr	r4, [pc, #288]	; (8000168 <delay+0x1e>)
	movs r3, #0
 8000048:	2300      	movs	r3, #0
	b LoopFillZerobss
 800004a:	e001      	b.n	8000050 <LoopFillZerobss>

0800004c <FillZerobss>:

	FillZerobss:
		str  r3, [r2]
 800004c:	6013      	str	r3, [r2, #0]
		adds r2, r2, #4
 800004e:	3204      	adds	r2, #4

08000050 <LoopFillZerobss>:

	LoopFillZerobss:
		cmp r2, r4
 8000050:	42a2      	cmp	r2, r4
		bcc FillZerobss
 8000052:	d3fb      	bcc.n	800004c <FillZerobss>

	bx lr
 8000054:	4770      	bx	lr

08000056 <Default_Handler>:


/* default handler */
.section .text
Default_Handler:
	b Default_Handler
 8000056:	e7fe      	b.n	8000056 <Default_Handler>

08000058 <main>:

/* main function */
.section .text
main:
	/* enable GPIOA clock, bit2 on IOPENR */
    ldr r6, =RCC_IOPENR
 8000058:	4e44      	ldr	r6, [pc, #272]	; (800016c <delay+0x22>)
    ldr r2, [r6]
 800005a:	6832      	ldr	r2, [r6, #0]
   // Configure the GPIOA for PA pins
    movs r4, 0x3
 800005c:	2403      	movs	r4, #3
    orrs r2, r2, r4
 800005e:	4322      	orrs	r2, r4
    str r2, [r6]
 8000060:	6032      	str	r2, [r6, #0]


    ldr r0, =GPIOA_MODER
 8000062:	4843      	ldr	r0, [pc, #268]	; (8000170 <delay+0x26>)
    ldr r2, [r0]
 8000064:	6802      	ldr	r2, [r0, #0]
    ldr r4, =0x3
 8000066:	4c43      	ldr	r4, [pc, #268]	; (8000174 <delay+0x2a>)
    bics r2, r2, r4
 8000068:	43a2      	bics	r2, r4
    str r2, [r0]
 800006a:	6002      	str	r2, [r0, #0]

    ldr r1, =GPIOB_MODER
 800006c:	4942      	ldr	r1, [pc, #264]	; (8000178 <delay+0x2e>)
    ldr r2, [r1]
 800006e:	680a      	ldr	r2, [r1, #0]
    ldr r4, =0xFFFF0
 8000070:	4c42      	ldr	r4, [pc, #264]	; (800017c <delay+0x32>)
    bics r2, r2, r4
 8000072:	43a2      	bics	r2, r4
    ldr r4, =0x55550
 8000074:	4c42      	ldr	r4, [pc, #264]	; (8000180 <delay+0x36>)
	orrs r2, r2, r4
 8000076:	4322      	orrs	r2, r4
    str r2, [r1]
 8000078:	600a      	str	r2, [r1, #0]
	ldr r1, =GPIOB_ODR
 800007a:	4942      	ldr	r1, [pc, #264]	; (8000184 <delay+0x3a>)
    ldr r2,= 0x1c
 800007c:	4a42      	ldr	r2, [pc, #264]	; (8000188 <delay+0x3e>)
    str r2, [r1]
 800007e:	600a      	str	r2, [r1, #0]
    ldr r3, =600000
 8000080:	4b42      	ldr	r3, [pc, #264]	; (800018c <delay+0x42>)
   	bl delay
 8000082:	f000 f862 	bl	800014a <delay>
   	ldr r4, =GPIOA_IDR
 8000086:	4c42      	ldr	r4, [pc, #264]	; (8000190 <delay+0x46>)
   	ldr r0, [r4]
 8000088:	6820      	ldr	r0, [r4, #0]

0800008a <leftDirect>:

leftDirect:
        ldr r2, [r1]
 800008a:	680a      	ldr	r2, [r1, #0]
       	lsls r2, #1
 800008c:	0052      	lsls	r2, r2, #1
       	ldr r4, =0x700
 800008e:	4c41      	ldr	r4, [pc, #260]	; (8000194 <delay+0x4a>)
       	cmp r2,r4
 8000090:	42a2      	cmp	r2, r4
       	beq t1
 8000092:	d00d      	beq.n	80000b0 <t1>
       	ldr r4, =0x608
 8000094:	4c40      	ldr	r4, [pc, #256]	; (8000198 <delay+0x4e>)
       	str r2, [r1]
 8000096:	600a      	str	r2, [r1, #0]
       	cmp r2,r4
 8000098:	42a2      	cmp	r2, r4
       	beq t2
 800009a:	d011      	beq.n	80000c0 <t2>
       	ldr r4, =0x418
 800009c:	4c3f      	ldr	r4, [pc, #252]	; (800019c <delay+0x52>)
       	cmp r2,r4
 800009e:	42a2      	cmp	r2, r4
       	beq t3
 80000a0:	d016      	beq.n	80000d0 <t3>
       	str r2, [r1]
 80000a2:	600a      	str	r2, [r1, #0]
       	ldr r3, =600000
 80000a4:	4b39      	ldr	r3, [pc, #228]	; (800018c <delay+0x42>)
       	bl delay
 80000a6:	f000 f850 	bl	800014a <delay>
       	bl button1
 80000aa:	f000 f844 	bl	8000136 <button1>
       	b leftDirect
 80000ae:	e7ec      	b.n	800008a <leftDirect>

080000b0 <t1>:

t1:
   		ldr r2,= 0x304
 80000b0:	4a3b      	ldr	r2, [pc, #236]	; (80001a0 <delay+0x56>)
   	    str r2, [r1]
 80000b2:	600a      	str	r2, [r1, #0]
   	    ldr r3, =600000
 80000b4:	4b35      	ldr	r3, [pc, #212]	; (800018c <delay+0x42>)
   	    bl delay
 80000b6:	f000 f848 	bl	800014a <delay>
   	    bl button1
 80000ba:	f000 f83c 	bl	8000136 <button1>
   	    b leftDirect
 80000be:	e7e4      	b.n	800008a <leftDirect>

080000c0 <t2>:

t2:
	    ldr r2,= 0x20c
 80000c0:	4a38      	ldr	r2, [pc, #224]	; (80001a4 <delay+0x5a>)
   	    str r2, [r1]
 80000c2:	600a      	str	r2, [r1, #0]
   	    ldr r3, =600000
 80000c4:	4b31      	ldr	r3, [pc, #196]	; (800018c <delay+0x42>)
   	    bl delay
 80000c6:	f000 f840 	bl	800014a <delay>
   	    bl button1
 80000ca:	f000 f834 	bl	8000136 <button1>
   	    b leftDirect
 80000ce:	e7dc      	b.n	800008a <leftDirect>

080000d0 <t3>:
t3:
   		ldr r2,= 0x1c
 80000d0:	4a2d      	ldr	r2, [pc, #180]	; (8000188 <delay+0x3e>)
     	str r2, [r1]
 80000d2:	600a      	str	r2, [r1, #0]
     	ldr r3, =600000
 80000d4:	4b2d      	ldr	r3, [pc, #180]	; (800018c <delay+0x42>)
   	    bl delay
 80000d6:	f000 f838 	bl	800014a <delay>
   	    bl button1
 80000da:	f000 f82c 	bl	8000136 <button1>
   	    b leftDirect
 80000de:	e7d4      	b.n	800008a <leftDirect>

080000e0 <RightDirect>:
RightDirect:
        ldr r2, [r1]
 80000e0:	680a      	ldr	r2, [r1, #0]
       	lsrs r2, #1
 80000e2:	0852      	lsrs	r2, r2, #1
       	ldr r4, =0xe
 80000e4:	4c30      	ldr	r4, [pc, #192]	; (80001a8 <delay+0x5e>)
       	cmp r2,r4
 80000e6:	42a2      	cmp	r2, r4
       	beq t4
 80000e8:	d00d      	beq.n	8000106 <t4>
       	ldr r4, =0x106
 80000ea:	4c30      	ldr	r4, [pc, #192]	; (80001ac <delay+0x62>)
       	str r2, [r1]
 80000ec:	600a      	str	r2, [r1, #0]
       	cmp r2,r4
 80000ee:	42a2      	cmp	r2, r4
       	beq t5
 80000f0:	d011      	beq.n	8000116 <t5>
       	ldr r4, =0x182
 80000f2:	4c2f      	ldr	r4, [pc, #188]	; (80001b0 <delay+0x66>)
       	cmp r2,r4
 80000f4:	42a2      	cmp	r2, r4
       	beq t6
 80000f6:	d016      	beq.n	8000126 <t6>
       	str r2, [r1]
 80000f8:	600a      	str	r2, [r1, #0]
       	ldr r3, =600000
 80000fa:	4b24      	ldr	r3, [pc, #144]	; (800018c <delay+0x42>)
       	bl delay
 80000fc:	f000 f825 	bl	800014a <delay>
       	bl button2
 8000100:	f000 f81e 	bl	8000140 <button2>
       	b  RightDirect
 8000104:	e7ec      	b.n	80000e0 <RightDirect>

08000106 <t4>:
t4:
   		ldr r2,= 0x20c
 8000106:	4a27      	ldr	r2, [pc, #156]	; (80001a4 <delay+0x5a>)
   	    str r2, [r1]
 8000108:	600a      	str	r2, [r1, #0]
   	    ldr r3, =600000
 800010a:	4b20      	ldr	r3, [pc, #128]	; (800018c <delay+0x42>)
   	    bl delay
 800010c:	f000 f81d 	bl	800014a <delay>
   	    bl button2
 8000110:	f000 f816 	bl	8000140 <button2>
   	    b  RightDirect
 8000114:	e7e4      	b.n	80000e0 <RightDirect>

08000116 <t5>:
t5:
	    ldr r2,= 0x304
 8000116:	4a22      	ldr	r2, [pc, #136]	; (80001a0 <delay+0x56>)
   	    str r2, [r1]
 8000118:	600a      	str	r2, [r1, #0]
   	    ldr r3, =600000
 800011a:	4b1c      	ldr	r3, [pc, #112]	; (800018c <delay+0x42>)
   	    bl delay
 800011c:	f000 f815 	bl	800014a <delay>
   	    bl button2
 8000120:	f000 f80e 	bl	8000140 <button2>
   	    b  RightDirect
 8000124:	e7dc      	b.n	80000e0 <RightDirect>

08000126 <t6>:
t6:
   		ldr r2,= 0x380
 8000126:	4a23      	ldr	r2, [pc, #140]	; (80001b4 <delay+0x6a>)
     	str r2, [r1]
 8000128:	600a      	str	r2, [r1, #0]
     	ldr r3, =600000
 800012a:	4b18      	ldr	r3, [pc, #96]	; (800018c <delay+0x42>)
   	    bl delay
 800012c:	f000 f80d 	bl	800014a <delay>
   	    bl button2
 8000130:	f000 f806 	bl	8000140 <button2>
   	    b  RightDirect
 8000134:	e7d4      	b.n	80000e0 <RightDirect>

08000136 <button1>:

button1:
        ldr r4, =GPIOA_IDR
 8000136:	4c16      	ldr	r4, [pc, #88]	; (8000190 <delay+0x46>)
        ldr r5, [r4]
 8000138:	6825      	ldr	r5, [r4, #0]
        cmp r0 , r5
 800013a:	42a8      	cmp	r0, r5
 		bne RightDirect
 800013c:	d1d0      	bne.n	80000e0 <RightDirect>
		bx lr
 800013e:	4770      	bx	lr

08000140 <button2>:

button2:
		ldr r4, =GPIOA_IDR
 8000140:	4c13      	ldr	r4, [pc, #76]	; (8000190 <delay+0x46>)
        ldr r5, [r4]
 8000142:	6825      	ldr	r5, [r4, #0]
        cmp r0 , r5
 8000144:	42a8      	cmp	r0, r5
 		beq leftDirect
 8000146:	d0a0      	beq.n	800008a <leftDirect>
		bx lr
 8000148:	4770      	bx	lr

0800014a <delay>:

delay:
    	subs r3, #1 // r1 = r1 - 1
 800014a:	3b01      	subs	r3, #1
		bne delay // r1 is not equal to 0.
 800014c:	d1fd      	bne.n	800014a <delay>
		bx lr // r1 is equal to 0.
 800014e:	4770      	bx	lr
	/* for(;;); */

b .
 8000150:	e7fe      	b.n	8000150 <delay+0x6>
 8000152:	0000      	.short	0x0000
	ldr r0, =_estack
 8000154:	20002000 	.word	0x20002000
	ldr r0, =_sdata
 8000158:	20000000 	.word	0x20000000
	ldr r1, =_edata
 800015c:	20000000 	.word	0x20000000
	ldr r2, =_sidata
 8000160:	080001c0 	.word	0x080001c0
	ldr r2, =_sbss
 8000164:	20000000 	.word	0x20000000
	ldr r4, =_ebss
 8000168:	20000000 	.word	0x20000000
    ldr r6, =RCC_IOPENR
 800016c:	40021034 	.word	0x40021034
    ldr r0, =GPIOA_MODER
 8000170:	50000000 	.word	0x50000000
    ldr r4, =0x3
 8000174:	00000003 	.word	0x00000003
    ldr r1, =GPIOB_MODER
 8000178:	50000400 	.word	0x50000400
    ldr r4, =0xFFFF0
 800017c:	000ffff0 	.word	0x000ffff0
    ldr r4, =0x55550
 8000180:	00055550 	.word	0x00055550
	ldr r1, =GPIOB_ODR
 8000184:	50000414 	.word	0x50000414
    ldr r2,= 0x1c
 8000188:	0000001c 	.word	0x0000001c
    ldr r3, =600000
 800018c:	000927c0 	.word	0x000927c0
   	ldr r4, =GPIOA_IDR
 8000190:	50000010 	.word	0x50000010
       	ldr r4, =0x700
 8000194:	00000700 	.word	0x00000700
       	ldr r4, =0x608
 8000198:	00000608 	.word	0x00000608
       	ldr r4, =0x418
 800019c:	00000418 	.word	0x00000418
   		ldr r2,= 0x304
 80001a0:	00000304 	.word	0x00000304
	    ldr r2,= 0x20c
 80001a4:	0000020c 	.word	0x0000020c
       	ldr r4, =0xe
 80001a8:	0000000e 	.word	0x0000000e
       	ldr r4, =0x106
 80001ac:	00000106 	.word	0x00000106
       	ldr r4, =0x182
 80001b0:	00000182 	.word	0x00000182
   		ldr r2,= 0x380
 80001b4:	00000380 	.word	0x00000380

Disassembly of section .init:

080001b8 <_init>:
 80001b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80001ba:	46c0      	nop			; (mov r8, r8)

Disassembly of section .fini:

080001bc <_fini>:
 80001bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80001be:	46c0      	nop			; (mov r8, r8)
