#include "stm32g0xx.h"

//presigng of function
void SetZero(void);
void delay(uint32_t);
void clearSSD(void);
void setSSD(int);
void counter(void);
void ButtonInit(void);
void GPIOA_Init(void);
void GPIOB_Init(void);

void EXTI0_1_IRQHandler(void){ // EXTI for button
	counter(); // when button pressed, counter is started.
	EXTI->RPR1 |= (1U << 1); // Rising Pending Register
}

int main(void) {
	GPIOA_Init();
	GPIOB_Init();
	SetZero();
	ButtonInit();

	while(1) {
	}

	return 0;
}

void clearSSD(void){ // Clear display
	GPIOB -> ODR |= (1U << 0); //PB0 A
	GPIOB -> ODR |= (1U << 1); //PB1 B
	GPIOB -> ODR |= (1U << 2); //PB2 C
	GPIOB -> ODR |= (1U << 3); //PB3 D
	GPIOB -> ODR |= (1U << 4); //PB4 E
	GPIOB -> ODR |= (1U << 5); //PB5 F
	GPIOB -> ODR |= (1U << 6); //PB6 G
}

void setSSD(int x){ // choose number we want and its leds are turned on.
	clearSSD();
	switch(x){
	case 0:
		for(int i=0; i<6; i++){// A B C D E F
			GPIOB->ODR &= ~(1U << i);
		}
		break;
	case 1:
		for(int i=1; i<3; i++){ //B C
			GPIOB->ODR &= ~(1U << i);
			}
		break;
	case 2:
		for(int i=0; i<7; i++){// A B D E G
			if (i==0 || i==1 || i==3 || i==4 || i==6){
				GPIOB->ODR &= ~(1U << i);
			}
		}
		break;
	case 3:
		for(int i=0; i<7; i++){// A B C D G
			if (i==0 || i==1 || i==2 || i==3 || i==6){
				GPIOB->ODR &= ~(1U << i);
			}
		}
		break;
	case 4:
		for(int i=0; i<7; i++){// B C F G
			if (i==1 || i==2 || i==5 || i==6){
				GPIOB->ODR &= ~(1U << i);
			}
		}
		break;
	case 5:
		for(int i=0; i<7; i++){// A C D F G
			if (i==0 || i==2 || i==3 || i==5 || i==6){
				GPIOB->ODR &= ~(1U << i);
			}
		}
		break;
	case 6:
		GPIOB->ODR &= ~(1U << 0);// A C D E F G
		for(int i=2; i<7; i++){
			GPIOB->ODR &= ~(1U << i);
		}
		break;
	case 7:
		for(int i=0; i<3; i++){// A B C
			GPIOB->ODR &= ~(1U << i);
		}
		break;
	case 8:
		for(int i=0; i<7; i++){// A B C D E F G
			GPIOB->ODR &= ~(1U << i);
		}
		break;
	case 9:
		GPIOB->ODR &= ~(1U << 0); //A
		GPIOB->ODR &= ~(1U << 1); //B
		GPIOB->ODR &= ~(1U << 2); //C
		GPIOB->ODR &= ~(1U << 3); //D
		GPIOB->ODR &= ~(1U << 5); //F
		GPIOB->ODR &= ~(1U << 6); //G
		break;
	}
}
void counter(void){
	SetZero(); // leds show us 0000 value.
	delay(1000000);
	for(int i=0; i<=9999; i++){ // count up timer until 10000.
		int thousand, hundred, decimal, unit;
		thousand=(i/1000); // thousand digit of i
		hundred=((i-thousand*1000)/100); // hundred digit of i
		decimal=((i- thousand*1000 - hundred*100)/10); // decimal digit of i
		unit=(i- thousand*1000 - hundred*100 - decimal*10); // unit digit of i

		/* unit digit we want is set to 1 and the others are set to 0*/
		GPIOA ->ODR &= ~(1U << 7); // D1 - PA7
		GPIOA ->ODR &= ~(1U << 6); // D2 - PA7
		GPIOA ->ODR &= ~(1U << 0); // D3 - PA7
		GPIOA ->ODR |= (1U << 5);
		setSSD(unit);
		delay(50000);

		/* decimal digit we want is set to 1 and the others are set to 0*/
		GPIOA ->ODR &= ~(1U << 7); // D1 - PA7
		GPIOA ->ODR &= ~(1U << 6); // D2 - PA7
		GPIOA ->ODR |= (1U << 0); // D3 - PA7
		GPIOA ->ODR &= ~(1U << 5);
		setSSD(decimal);
		delay(50000);

		/* hundred digit we want is set to 1 and the others are set to 0*/
		GPIOA ->ODR &= ~(1U << 7); // D1 - PA7
		GPIOA ->ODR |= (1U << 6); // D2 - PA7
		GPIOA ->ODR &= ~(1U << 0); // D3 - PA7
		GPIOA ->ODR &= ~(1U << 5);
		setSSD(hundred);
		delay(50000);

		/* thousand digit we want is set to 1 and the others are set to 0*/
		GPIOA ->ODR |= (1U << 7); // D1 - PA7
		GPIOA ->ODR &= ~(1U << 6); // D2 - PA7
		GPIOA ->ODR &= ~(1U << 0); // D3 - PA7
		GPIOA ->ODR &= ~(1U << 5);
		setSSD(thousand);
		delay(50000);
	}

	GPIOB->ODR |= (1U << 8); // PB8 - LED turn on
	delay(1000000);
	GPIOB->BRR |= (1U << 8); // led turn off
	SetZero();
	delay(1000000);
}
void ButtonInit(void){//PA1 Ä°S BUTTON
	/* rising edge, selection register and mask register */
	EXTI->RTSR1 |= (1U << 1);
	EXTI->EXTICR[0] |= (0U << 8*1);
	EXTI->IMR1 |= (1U << 1);
	/* enable NVIC and set interrupt priority */
	NVIC_SetPriority(EXTI0_1_IRQn, 0);
	NVIC_EnableIRQ(EXTI0_1_IRQn);
}

void GPIOA_Init(void){
	/* enable required GPIOA registers and RCC register */
	RCC->IOPENR |= (1U << 0);
	for(int k=0; k<9; k++){
		if (k==0 || k==1 || k==5 || k==6 || k==7 || k==8){
			GPIOA->MODER &= ~(3U << 2*k);
			GPIOA->MODER |= (1U << 2*k);
		}
	}
}

void GPIOB_Init(void){
	/* enable required GPIOB registers and RCC register */
	RCC->IOPENR |= (1U << 1);
	GPIOB->MODER &= ~0x3FFF; // &= ~(0b0011_1111_1111_1111)
	GPIOB->MOder |= 0x1555; // |= (0b0001_0101_0101_0101)
}

void SetZero(void){
	GPIOA ->ODR |= (1U << 7); // D1 digit to PA7
	GPIOA ->ODR |= (1U << 6); // D2 digit to PA6
	GPIOA ->ODR |= (1U << 0); // D3 digit to PA0
	GPIOA ->ODR |= (1U << 5); // D4 digit to PA5
	setSSD(0);
}

void delay(uint32_t time) {
	for(; time>0; time--);
}
